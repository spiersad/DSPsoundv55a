/*
 * DSPsoundv55aUI.java
 *
 * Created on August 15, 2006, 2:19 PM
 */
 
//
// copyright 1995-2007, by Thomas P. Weldon,
// all rights reserved
//
//
// Students in eegr4124 may make copies and modify them 
//for the purposes of their course projects.
//Any other use of this file is prohibited.


package tpw.DSPsoundv55a;
import java.text.*;
import javax.sound.sampled.*;
import javax.swing.*;
import java.awt.*;  //needed for Graphics class inclusion
import javax.imageio.*;  //needed for ImageIO
import java.awt.image.*;  //needed for BufferedImage
import java.io.*;  //needed for File
//import java.lang.Runtime; //needed for exec()
import tpw.fclass.Fclass;
import tpw.iclass.Iclass;
import tpw.Myclass.Myclass;


/**
 *
 * @author  Owner
 */
public class DSPsoundv55aUI extends javax.swing.JFrame {
    
    /**
     * Creates new form DSPsoundv55aUI
     */
    public DSPsoundv55aUI() {
        initComponents();
        
        //below added for image panel area
 //---------------------------------------------------------
        //initialize variables to null to hopefully suppress rendering
            inFileName1 = new String("empty");
           inFileName2 = new String("empty");
            imgIo = null;
            buffImg = null;
            inFile1 = null;
            inFile2 = null;
            iconLabel = null;
            imageIcon = null;
            inIclass= new Iclass();
            outIclass=new Iclass();
            inFclass=new Fclass();
            outFclass=new Fclass();

            dispData=new Myclass(16);
            for(int nn=0; nn<dispData.getn(); nn++)  //load default data for display
                dispData.setelre(nn,(float)(100*(nn-dispData.getn()/2)));
                dispData.setelre(0,0f);
            inData1=new Myclass();
            inData2=new Myclass();
            dispXdim=650; //display area dimensions
            //dispXdim=1150; //bad dimensions ->this makes reports illegible
            dispYdim=350;
            zoom2flag=0; //no zoom
           
        //Set up the drawing area.
            imagepanel = new InnerClassImagePanel();
            jScrollPaneCenter.setViewportView(imagepanel);
            iconLabel  = new JLabel();  //this label will contain the image
            imagepanel.add(iconLabel); //attach the label to the drawing panel
            imagepanel.revalidate();
            imagepanel.repaint();
            imagepanel.setAutoscrolls(true); //allows dragging?
 
          
  refreshDisplay();          
 
 
            
            
 //=====================           
            
 //end  added for image panel area       
 //---------------------------------------------------------
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JButton jButtonRead1;

        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldInfilename1 = new javax.swing.JTextField();
        jButtonRead1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldinfilename2 = new javax.swing.JTextField();
        jButtonRead2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldOutfilename = new javax.swing.JTextField();
        jButtonWrite = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButtonPlay = new javax.swing.JButton();
        zoom2Button = new javax.swing.JButton();
        zoom4Button = new javax.swing.JButton();
        jButton2lnFFT = new javax.swing.JButton();
        jButton20log10magFFT = new javax.swing.JButton();
        jButtonConvolveF1F2 = new javax.swing.JButton();
        jButtonMagHomega = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButtonF1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButtonImpulseResponse = new javax.swing.JButton();
        jButtonFreqResponse = new javax.swing.JButton();
        jButtonA = new javax.swing.JButton();
        jButtonB = new javax.swing.JButton();
        jButtonI = new javax.swing.JButton();
        jButtonQ = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jEditorPaneBottom = new javax.swing.JEditorPane();
        jScrollPaneCenter = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DSPsound-v55a (tpw 07)");
        getAccessibleContext().setAccessibleName("DSPsound-v55a (tpw 07)");
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setText("input filename1:");

        jTextFieldInfilename1.setText("sin3264.au");
        jTextFieldInfilename1.setPreferredSize(new java.awt.Dimension(200, 19));

        jButtonRead1.setText("Read1");
        jButtonRead1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Read1Clicked(evt);
            }
        });

        jLabel5.setText("input filename2:");

        jTextFieldinfilename2.setText("sin32.au");

        jButtonRead2.setText("Read2");
        jButtonRead2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRead2MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextFieldInfilename1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldinfilename2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButtonRead2)
                    .add(jButtonRead1))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(jTextFieldinfilename2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButtonRead2)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jTextFieldInfilename1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jButtonRead1))
                .addContainerGap())
        );
        jPanel2.add(jPanel5);

        jLabel2.setText("output filename:");
        jPanel6.add(jLabel2);

        jTextFieldOutfilename.setText("out.png");
        jTextFieldOutfilename.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel6.add(jTextFieldOutfilename);

        jButtonWrite.setText("Write png");
        jButtonWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWriteActionPerformed(evt);
            }
        });
        jButtonWrite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WriteClicked(evt);
            }
        });

        jPanel6.add(jButtonWrite);

        jPanel2.add(jPanel6);

        jPanel2.add(jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButtonPlay.setText("Play");
        jButtonPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPlayMouseClicked(evt);
            }
        });

        jPanel8.add(jButtonPlay);

        zoom2Button.setText("Zoom2");
        zoom2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoom2ButtonActionPerformed(evt);
            }
        });
        zoom2Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoom2ButtonMouseClicked(evt);
            }
        });

        jPanel8.add(zoom2Button);

        zoom4Button.setText("Zoom4");
        zoom4Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoom4ButtonMouseClicked(evt);
            }
        });

        jPanel8.add(zoom4Button);

        jButton2lnFFT.setText("2lnFFT");
        jButton2lnFFT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2lnFFTClicked(evt);
            }
        });

        jPanel8.add(jButton2lnFFT);

        jButton20log10magFFT.setText("20log10|FFT|");
        jButton20log10magFFT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton20log10magFFTMouseClicked(evt);
            }
        });

        jPanel8.add(jButton20log10magFFT);

        jButtonConvolveF1F2.setText("convolve F1 F2");
        jButtonConvolveF1F2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConvolveF1F2MouseClicked(evt);
            }
        });

        jPanel8.add(jButtonConvolveF1F2);

        jButtonMagHomega.setText("|H(w)|");
        jButtonMagHomega.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMagHomegaMouseClicked(evt);
            }
        });

        jPanel8.add(jButtonMagHomega);

        jPanel2.add(jPanel8);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButtonF1.setText("F1");
        jButtonF1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F1Clicked(evt);
            }
        });

        jPanel9.add(jButtonF1);

        jButton5.setText("F2");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F2Clicked(evt);
            }
        });

        jPanel9.add(jButton5);

        jButton6.setText("F3");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F3Clicked(evt);
            }
        });

        jPanel9.add(jButton6);

        jButton7.setText("F4");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F4Clicked(evt);
            }
        });

        jPanel9.add(jButton7);

        jButton8.setText("F5");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F5Clicked(evt);
            }
        });

        jPanel9.add(jButton8);

        jButtonImpulseResponse.setText("Impulse Resp");
        jButtonImpulseResponse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonImpulseResponseMouseClicked(evt);
            }
        });

        jPanel9.add(jButtonImpulseResponse);

        jButtonFreqResponse.setText("Freq Resp");
        jButtonFreqResponse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFreqResponseMouseClicked(evt);
            }
        });

        jPanel9.add(jButtonFreqResponse);

        jButtonA.setText("A");
        jButtonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAMouseClicked(evt);
            }
        });

        jPanel9.add(jButtonA);

        jButtonB.setText("B");
        jButtonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBMouseClicked(evt);
            }
        });

        jPanel9.add(jButtonB);

        jButtonI.setText("I");
        jButtonI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonIMouseClicked(evt);
            }
        });

        jPanel9.add(jButtonI);

        jButtonQ.setText("Q");
        jButtonQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonQMouseClicked(evt);
            }
        });

        jPanel9.add(jButtonQ);

        jPanel2.add(jPanel9);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jEditorPaneBottom.setPreferredSize(new java.awt.Dimension(300, 70));
        jPanel3.add(jEditorPaneBottom);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        jScrollPaneCenter.setMinimumSize(new java.awt.Dimension(64, 64));
        jScrollPaneCenter.setPreferredSize(new java.awt.Dimension(675, 375));
        getContentPane().add(jScrollPaneCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonQMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("Q");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
          
     
    }//GEN-LAST:event_jButtonQMouseClicked

    private void jButtonIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonIMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("I");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
          
 
    }//GEN-LAST:event_jButtonIMouseClicked

    private void jButtonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("B");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
          
         
    }//GEN-LAST:event_jButtonBMouseClicked

    private void jButtonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("A");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
          
                
    }//GEN-LAST:event_jButtonAMouseClicked

    private void zoom4ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoom4ButtonMouseClicked
// TODO add your handling code here:
  
         String fkey = new String("Zoom4");
         jEditorPaneBottom.setText( fkey + " clicked \n");   
         
         if(zoom2flag != 0)
             zoom2flag=0;
         else
             zoom2flag=4;
             
          
        if(zoom2flag != 0)
        {//temporarily display a zoomed x2 version
        Myclass temp1 = new Myclass();
        Myclass temp2 = new Myclass(dispData.getn()/4);
        
        temp1.equals(dispData);
        for(int nn=0; nn<temp2.getn() ; nn++)
        {
            temp2.setelre(nn,dispData.getelre(nn));
            temp2.setelim(nn,dispData.getelim(nn));
        }
        dispData.equals(temp2);  //temporarily store the half-sized data
        zoom2flag=4;            //set zoomflag so zoom message prints
        refreshDisplay();           
        dispData.equals(temp1);  //restore the original data after drawing display
        }
        else
        {
                  refreshDisplay();             
        }
        
      
        
        
        
    }//GEN-LAST:event_zoom4ButtonMouseClicked

    private void jButtonMagHomegaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMagHomegaMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("|H(w)|");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
          
        
    }//GEN-LAST:event_jButtonMagHomegaMouseClicked

    private void jButton20log10magFFTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20log10magFFTMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("20log10magFFT");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
    
        
    }//GEN-LAST:event_jButton20log10magFFTMouseClicked

    private void jButtonFreqResponseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFreqResponseMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("FreqResponse");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
    
    }//GEN-LAST:event_jButtonFreqResponseMouseClicked

    private void jButtonImpulseResponseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonImpulseResponseMouseClicked
// TODO add your handling code here:
        
    String fkey = new String("ImpulseResponse");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
        
    }//GEN-LAST:event_jButtonImpulseResponseMouseClicked

    private void jButtonConvolveF1F2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConvolveF1F2MouseClicked
// TODO add your handling code here:
        
    String fkey = new String("ConvolveF1F2");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
               
        
    }//GEN-LAST:event_jButtonConvolveF1F2MouseClicked

    private void jButtonPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPlayMouseClicked
// TODO add your handling code here:
        
                         String fkey = new String("Play");
         jEditorPaneBottom.setText( fkey + " clicked \n");   
        
     Myclass znorm= new Myclass();
     znorm.equals(dispData);
     znorm.normalize();
      ByteArrayInputStream zbitstream = new ByteArrayInputStream(znorm.getdata());
     AudioFormat linPcm = new AudioFormat((float)8000.0, 8, 1, true, true);
     //AudioInputStream zstream = new AudioInputStream( zbitstream, linPcm, (long) znorm.getn());       
    DataLine.Info dataLineInfo =   new DataLine.Info(  SourceDataLine.class, linPcm);
     try{   
         SourceDataLine sourceDataLine = 
                 (SourceDataLine) AudioSystem.getLine(dataLineInfo);
          sourceDataLine.open(linPcm);
          sourceDataLine.start();
          sourceDataLine.write(znorm.getdata(),0,znorm.getn());
     }
     catch (LineUnavailableException ex)
     { 
            System.out.println("F1Clicked LineUnavailable ex="+ex);

     }
     
        
    }//GEN-LAST:event_jButtonPlayMouseClicked

    private void jButtonRead2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRead2MouseClicked
// TODO add your handling code here:
        
                         String fkey = new String("Read2");
         jEditorPaneBottom.setText( fkey + " clicked \n");   
         
        inFileName2 = jTextFieldinfilename2.getText();
        inFile2 = new File(inFileName2); 
        inData2.readau(inFileName2);
        dispData.equals(inData2);
        refreshDisplay();           
        
        
            System.out.println("read file2 "  + inFileName2 );
    
  
        
        
    }//GEN-LAST:event_jButtonRead2MouseClicked

    private void zoom2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoom2ButtonActionPerformed
// TODO add your handling code here:
       
    }//GEN-LAST:event_zoom2ButtonActionPerformed

    private void zoom2ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoom2ButtonMouseClicked
// TODO add your handling code here:

      
         String fkey = new String("Zoom2");
         jEditorPaneBottom.setText( fkey + " clicked \n");   
         
         if(zoom2flag != 0)
             zoom2flag=0;
         else
             zoom2flag=2;
             
          
        if(zoom2flag != 0)
        {//temporarily display a zoomed x2 version
        Myclass temp1 = new Myclass();
        Myclass temp2 = new Myclass(dispData.getn()/2);
        
        temp1.equals(dispData);
        for(int nn=0; nn<temp2.getn() ; nn++)
        {
            temp2.setelre(nn,dispData.getelre(nn));
            temp2.setelim(nn,dispData.getelim(nn));
        }
        dispData.equals(temp2);  //temporarily store the half-sized data
        zoom2flag=2;            //set zoomflag so zoom message prints
        refreshDisplay();           
        dispData.equals(temp1);  //restore the original data after drawing display
        }
        else
        {
                  refreshDisplay();             
        }
        
      
 
        
    }//GEN-LAST:event_zoom2ButtonMouseClicked


    
    
    private void jButtonWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWriteActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonWriteActionPerformed

    private void Read1Clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Read1Clicked
// TODO add your handling code here:
        
                 String fkey = new String("Read1");
         jEditorPaneBottom.setText( fkey + " clicked \n");   
         
        inFileName1 = jTextFieldInfilename1.getText();
        inFile1 = new File(inFileName1); 
        inData1.readau(inFileName1);
        dispData.equals(inData1);
        refreshDisplay();           
        
        
          //  System.out.println("read file1 "  + inFileName1 
          //          +" filesize="+ inData1.getn());
  
  
        
        
    }//GEN-LAST:event_Read1Clicked

    private void WriteClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WriteClicked
// TODO add your handling code here:       
                String fkey = new String("Write");
        jEditorPaneBottom.setText( fkey + " clicked \n");  
 
         outFileName = jTextFieldOutfilename.getText();
        outFile = new File(outFileName); 
        int ioflag = 0;
            try {ImageIO.write(buffImg,"png",outFile); }
              catch (IOException e) {
                  ioflag=1;
                  System.out.println("WriteClicked::"
                          +"outfilewrite IOException"+e);
                  jEditorPaneBottom.setText( "WriteClicked"
                          +"outfilewrite IOException" 
                          + " file="+ outFileName + " e=" + e +"\n" );
                 } 
           if(ioflag == 0)
        {
            jEditorPaneBottom.setText( "write file "  + outFileName  );       
         }
         
    }//GEN-LAST:event_WriteClicked

    private void jButton2lnFFTClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2lnFFTClicked
// TODO add your handling code here:
        
         String fkey = new String("2lnFFT");
         jEditorPaneBottom.setText( fkey + " clicked \n");   

    
         dispData.equals(dispData.fft());
         dispData.lnmag();
         
        refreshDisplay();           
 
       
        
    }//GEN-LAST:event_jButton2lnFFTClicked

    private void F5Clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_F5Clicked
// TODO add your handling code here:

    String fkey = new String("F5");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
       
        
       
    }//GEN-LAST:event_F5Clicked

    private void F4Clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_F4Clicked
// TODO add your handling code here:

     String fkey = new String("F4");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
        
       
    }//GEN-LAST:event_F4Clicked

    private void F3Clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_F3Clicked
// TODO add your handling code here:

    String fkey = new String("F3");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
        
       
        
    }//GEN-LAST:event_F3Clicked

    private void F2Clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_F2Clicked
// TODO add your handling code here:

    String fkey = new String("F2");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
        
    refreshDisplay(); //redraws output display screen           
      
    }//GEN-LAST:event_F2Clicked

    private void F1Clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_F1Clicked
// TODO add your handling code here:
                    
//save the file after drawing the line on it

    String fkey = new String("F1");
    jEditorPaneBottom.setText( fkey + " clicked \n");  //printout at screenbottom 

// Put your ecgr4124 code here
    
    //remove the following  code after answering the corresponding
    //questions for project 1
    
        Myclass x = new Myclass();
        Myclass y = new Myclass();
        
        //x.equals(inData1);
        x.equals(dispData);
        y.equals(x);
	y.plus(10);
	y.plus(x);
	dispData.equals(y);
        
   //dont remove below here
        
    refreshDisplay(); //redraws output display screen           
  

    
// !! you should not need any of the code commented out below here !!
    
    // -----------------------------------------------------------
         /*   
         // the following is for calling an external routing F1.exe
         // as an alternative way to implement a button

            String fkey = new String("F1");
            jEditorPaneBottom.setText("exec " + fkey + ".exe \n");  
                 try {Runtime.getRuntime().exec( fkey + ".exe"); 
                        }
                  catch (IOException e) {
                      System.out.println(fkey + "Clicked::"
                               + fkey + ".exe IOException=" +e);
                      jEditorPaneBottom.setText( fkey + "Clicked::"
                               + fkey + ".exe IOException=" +e +"\n" );
                     } 
          */    
    // -----------------------------------------------------------
    // end of commented out code
       
    }//GEN-LAST:event_F1Clicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
// TODO add your handling code here:
        
                String fkey = new String("LogFFT");
         jEditorPaneBottom.setText( fkey + " clicked \n");   

        
    }//GEN-LAST:event_jButton6ActionPerformed

    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DSPsoundv55aUI().setVisible(true);
            }
        });
    }

    public final class InnerClassImagePanel extends javax.swing.JPanel {
   
      
           protected void paintComponent(Graphics g) {
            super.paintComponent(g);
                /*   //following not used .. may be helpful for debug
                    drawpanel.revalidate();
                    drawpanel.repaint();
                */
            imagepanel.setAutoscrolls(true); //allows dragging?
            }
    
    }

    //*************************************************
    // added classes
    //
 public void refreshDisplay()  {
   
       buffImg=new BufferedImage(dispXdim,
                    dispYdim, BufferedImage.TYPE_INT_ARGB);
        Graphics gg = buffImg.createGraphics();
        gg.setColor(Color.WHITE);
        gg.fillRect(0,0,dispXdim,dispYdim);
             
            imageIcon=new ImageIcon(buffImg);
            iconLabel.setIcon(imageIcon);
            iconLabel  = new JLabel(imageIcon);
            imagepanel.removeAll();
            imagepanel.add(iconLabel,0);
            imagepanel.setBackground(Color.LIGHT_GRAY);
            jScrollPaneCenter.setBackground(Color.BLUE);
          
            imagepanel.revalidate();
            imagepanel.repaint();
            imagepanel.setAutoscrolls(true); //allows dragging?                
                      
        //gg.drawLine(10,10,buffImg.getWidth()-buffImg.getWidth()/10,
         //           buffImg.getHeight()-buffImg.getHeight()/2);
        int xxs=0,yys=0,xxf=0,yyf=0;
        int xoff=100,yoff=50,xwid=512,ywid=280;
        if(dispXdim>1149) xwid=1024;            
        float maxx=dispData.maxre();
        float minn=dispData.minre();
        float scale=maxx-minn;
        if(scale == 0) 
        {scale=.02f; maxx=maxx+.01f;  minn=minn-.01f;  }
        if(Math.abs(maxx/scale)+Math.abs(minn/scale) > 1e6) 
        {scale=.02f; maxx=maxx+.01f;  minn=minn-.01f;  }
        //System.out.println("plottingscale="+ scale); 
        gg.setColor(Color.BLUE);
          gg.drawLine(xoff,dispYdim-yoff,xoff+xwid,dispYdim-yoff );
          gg.drawLine(xoff,dispYdim-yoff-1*ywid/4,xoff+xwid,dispYdim-yoff-1*ywid/4);
          gg.drawLine(xoff,dispYdim-yoff-2*ywid/4,xoff+xwid,dispYdim-yoff-2*ywid/4);
          gg.drawLine(xoff,dispYdim-yoff-3*ywid/4,xoff+xwid,dispYdim-yoff-3*ywid/4);
          gg.drawLine(xoff,dispYdim-yoff-4*ywid/4,xoff+xwid,dispYdim-yoff-4*ywid/4);
          gg.drawLine(xoff,dispYdim-yoff+5,xoff,dispYdim-yoff-ywid );
          gg.drawLine(xoff+1*xwid/4,dispYdim-yoff+5,xoff+1*xwid/4,dispYdim-yoff-ywid );
          gg.drawLine(xoff+2*xwid/4,dispYdim-yoff+5,xoff+2*xwid/4,dispYdim-yoff-ywid );
          gg.drawLine(xoff+3*xwid/4,dispYdim-yoff+5,xoff+3*xwid/4,dispYdim-yoff-ywid );
          gg.drawLine(xoff+xwid,dispYdim-yoff+5,xoff+xwid,dispYdim-yoff-ywid );

         gg.setColor(Color.MAGENTA);
         gg.drawString("0",xoff,dispYdim-yoff+25);
         gg.drawString(Integer.toString(dispData.getn()-1),xoff+xwid-40,dispYdim-yoff+25);   
         gg.drawString(Float.toString(maxx),5,dispYdim-yoff-ywid);
         gg.drawString(Float.toString(minn),5,dispYdim-yoff);
         if (zoom2flag != 0)
            gg.drawString("***** Zoom "+Integer.toString(zoom2flag)+" Factor *****",
                    xwid/2,dispYdim-yoff-ywid-5);
             

        gg.setColor(Color.BLACK);
        for(int nn=0; nn<dispData.getn()-1; nn++)
        {
         xxs=(int)((nn*xwid)/(dispData.getn()-1)+xoff);
         xxf=(int)(( (nn+1)*xwid)/(dispData.getn()-1)+xoff);
         yys=(int)(( (dispData.getelre(nn)-minn)*ywid)/scale+yoff);
         yyf=(int)(( (dispData.getelre(nn+1)-minn)*ywid)/scale+yoff);
         yys=dispYdim-yys;
         yyf=dispYdim-yyf;
         gg.drawLine(xxs,yys,xxf,yyf );
     
        }

  
        inData1.writeraw("f1.txt");
        inData2.writeraw("f2.txt");
        dispData.writeraw("disp.txt");

  /*       
             int rgb =0, a=0,  r=0, g=0, b=0;
           for(int xx=0; xx<dispXdim ; xx++)  //read and write some pixels
            for(int yy=0; yy<dispYdim ; yy++)  //read and write some pixels
                {
                   //rgb = buffImg.getRGB(xx, yy) ;  //read pixel
                   //alpha = ((rgb >> 24) & 0xff);
                   //red = ((rgb >> 16) & 0xff);
                   //green = ((rgb >> 8) & 0xff);
                   //blue = ((rgb ) & 0xff);
                   //System.out.println("yy="+ yy +" pix=" + buffImg.getRGB(xx, yy)
                    //    + " red=" + red + " green="  + green + " blue=" + blue
                    //    +" alpha=" +alpha );         
                   //change the pixels to green 
                   a=255;  
                   //r=xx & 0xFF;
                   r=0xFF; g= 0; b=0xFF;
                   rgb = (a << 24) | (r << 16) | (g << 8) | b;
                   buffImg.setRGB(xx, yy, rgb);    //write pixel
                  }
 */          

    }        
        
      //begin our second set of manually added variables
    private Myclass dispData, inData1, inData2;
    private int dispXdim, dispYdim;
    private int zoom2flag;
    
    private Iclass inIclass,outIclass;
    private Fclass inFclass,outFclass;
    private InnerClassImagePanel imagepanel;
    private String inFileName1,inFileName2;
    private String outFileName;
    private ImageIO imgIo;
    private BufferedImage buffImg;
    private File inFile1,inFile2;
    private File outFile;
    private JLabel iconLabel;
    private ImageIcon imageIcon;
    //end our second set manually added variables

   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton20log10magFFT;
    private javax.swing.JButton jButton2lnFFT;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonA;
    private javax.swing.JButton jButtonB;
    private javax.swing.JButton jButtonConvolveF1F2;
    private javax.swing.JButton jButtonF1;
    private javax.swing.JButton jButtonFreqResponse;
    private javax.swing.JButton jButtonI;
    private javax.swing.JButton jButtonImpulseResponse;
    private javax.swing.JButton jButtonMagHomega;
    private javax.swing.JButton jButtonPlay;
    private javax.swing.JButton jButtonQ;
    private javax.swing.JButton jButtonRead2;
    private javax.swing.JButton jButtonWrite;
    private javax.swing.JEditorPane jEditorPaneBottom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPaneCenter;
    private javax.swing.JTextField jTextFieldInfilename1;
    private javax.swing.JTextField jTextFieldOutfilename;
    private javax.swing.JTextField jTextFieldinfilename2;
    private javax.swing.JButton zoom2Button;
    private javax.swing.JButton zoom4Button;
    // End of variables declaration//GEN-END:variables
    
}

/*
//*********************************
//
//  do not use code below here for the course !!!
//
//  the following code gives ideas on how to read au files
//  using java built-in audio utilities
//     
//  for our class, it is much easier to use the Myclass readau() 
//
/*
    int totalFramesRead = 0;
    int bytesPerFrame =0;
    long filesize=0;
     inFileName = new String("sin32.au");
    inFile = new File(inFileName);
    

// somePathName is a pre-existing string whose value was
    // based on a user selection.
    try {
     // AudioInputStream audioIn =   AudioSystem.getAudioInputStream(inFile);
      AudioInputStream rawAudioIn =   AudioSystem.getAudioInputStream(inFile);
      AudioInputStream audioIn =  
              AudioSystem.getAudioInputStream(AudioFormat.Encoding.PCM_SIGNED,rawAudioIn);
        //AudioSystem.getAudioInputStream(PCM_SIGNED,inFile);
      bytesPerFrame = 
        audioIn.getFormat().getFrameSize();
      filesize=(audioIn.getFrameLength()*audioIn.getFormat().getFrameSize());
      System.out.println("F1Clicked infile="+inFileName+
                           " bytesperframe="+bytesPerFrame
              +" filesize="+filesize);
      System.out.println("F1Clicked ="+audioIn.getFormat().toString());
      
      
      // Set an arbitrary buffer size of 1024 frames.
      int numBytes =  bytesPerFrame; 
      byte[] audioBytes = new byte[(int)filesize*2];
      int[] audioInts = new int[(int)filesize];
      float[] audioFloats = new float[(int)filesize];
              for(int nn=0; nn<filesize; nn++)
        {audioBytes[nn]=0;
        }

      
      inData1 = new Myclass((int)filesize);
      try {
        int numBytesRead = 0;
        int numFramesRead = 0;
        int cnt=0;
        int ni=0; 
        int nb=0;

        // Try to read numBytes bytes from the file.
        while ((numBytesRead = 
          audioIn.read(audioBytes)) != -1) {
            cnt=cnt+1; 
          // Calculate the number of frames actually read.
          numFramesRead = numBytesRead / bytesPerFrame;
          totalFramesRead += numFramesRead;
          // Here, do something useful with the audio data that's 
          // now in the audioBytes array...
          if(cnt==2)
          {cnt=0; 
           audioInts[ni]=(((int)audioBytes[nb])<<8)+(int)audioBytes[nb-1];
           audioFloats[ni]=(float)((float)audioInts[ni]/32768.0);
           ni=ni+1;
          }
          nb=nb+1;
        }
        
 
       for(int nn=1; nn<40; nn++)
        {System.out.println("F1Clicked nn="+nn
                 +" audiobyte 2nn="+audioBytes[2*nn]
                 +"  2nn-1="+audioBytes[2*nn-1]
                 +" audioInts="+audioInts[nn]
                 +" audiofloat="+(float)((float)((((int)audioBytes[2*nn])<<7)+(int)audioBytes[2*nn-1])/32768.0*2.0)
                 +" sum"+((((int)audioBytes[2*nn])<<7)+(int)audioBytes[2*nn-1]) 
                 );
        }
        
        Myclass z = new Myclass();
        z.readau(inFileName);
        for(int nn=0; nn<40; nn++)
        {System.out.println("F1Clicked readau nn="+nn+" audio="+z.getelre(nn));
        }
        
        
      } catch (Exception ex) { 
        // Handle the error...
      System.out.println("F1Clicked infile="+inFileName+
                           " bytesperframe="+bytesPerFrame
                            +"Exception ex="+ex);
      }
    } catch (Exception e) {
      // Handle the error...
      System.out.println("F1Clicked infile="+inFileName+
                           " bytesperframe="+bytesPerFrame
                            +"Exception ex="+e);
    }       
        
      System.out.println("F1Clicked infile="+inFileName+
                           " bytesperframe="+bytesPerFrame
              +" filesize="+filesize);
    
      
      
     
        
 // the following is for calling an external routing F1.exe
 // as an alternative way to implement a button

        String fkey = new String("F1");
        jEditorPaneBottom.setText("exec " + fkey + ".exe \n");  
             try {Runtime.getRuntime().exec( fkey + ".exe"); 
                    }
              catch (IOException e) {
                  System.out.println(fkey + "Clicked::"
                           + fkey + ".exe IOException=" +e);
                  jEditorPaneBottom.setText( fkey + "Clicked::"
                           + fkey + ".exe IOException=" +e +"\n" );
                 } 
*/        
       
 

